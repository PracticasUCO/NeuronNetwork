/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicas.gui;

/**
 *
 * @author gowikel
 */
public class MainWindow extends javax.swing.JFrame {

   /**
    * Creates new form MainWindow
    */
   public MainWindow() {
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      loadToolBar = new javax.swing.JToolBar();
      loadTrainDataButton = new javax.swing.JButton();
      loadTestDataButton = new javax.swing.JButton();
      glue = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
      useBiasCheckBox = new javax.swing.JCheckBox();
      learningFactorLabel = new javax.swing.JLabel();
      loadTrainingSlider = new javax.swing.JSlider();
      inertiaFactorLabel = new javax.swing.JLabel();
      inertiaFactorSlider = new javax.swing.JSlider();
      spinnerOptionsPanel = new javax.swing.JPanel();
      minimumImprovementPanel = new javax.swing.JPanel();
      minimumImprovementField = new javax.swing.JTextField();
      hiddenLayersPanel = new javax.swing.JPanel();
      hiddenLayersSpinner = new javax.swing.JSpinner();
      hiddenNeuronsPanel = new javax.swing.JPanel();
      hiddenNeuronsSpinner = new javax.swing.JSpinner();
      maxiterPanel = new javax.swing.JPanel();
      maxiterSpinner = new javax.swing.JSpinner();
      timesPanel = new javax.swing.JPanel();
      timesSpinner = new javax.swing.JSpinner();
      generalInfoPanel = new javax.swing.JPanel();
      finalTrainErrorLabel = new javax.swing.JLabel();
      finalTrainError = new javax.swing.JLabel();
      finalTestErrorLabel = new javax.swing.JLabel();
      finalTestError = new javax.swing.JLabel();
      outputAreaPanel = new javax.swing.JScrollPane();
      outputArea = new javax.swing.JTextArea();
      actionPanel = new javax.swing.JPanel();
      trainButton = new javax.swing.JButton();
      statusPanel = new javax.swing.JPanel();
      statusLabel = new javax.swing.JLabel();
      infoLabel = new javax.swing.JLabel();
      progressPanel = new javax.swing.JPanel();
      progressBar = new javax.swing.JProgressBar();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Multilayer Perceptron");
      getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

      loadToolBar.setRollover(true);

      loadTrainDataButton.setText("Cargar fichero de entrenamiento");
      loadTrainDataButton.setFocusable(false);
      loadTrainDataButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      loadTrainDataButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
      loadToolBar.add(loadTrainDataButton);

      loadTestDataButton.setText("Cargar fichero de test");
      loadTestDataButton.setFocusable(false);
      loadTestDataButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      loadTestDataButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
      loadToolBar.add(loadTestDataButton);
      loadToolBar.add(glue);

      useBiasCheckBox.setText("Usa bias");
      useBiasCheckBox.setFocusable(false);
      useBiasCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
      useBiasCheckBox.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
      loadToolBar.add(useBiasCheckBox);

      getContentPane().add(loadToolBar);

      learningFactorLabel.setText("Factor de aprendizaje (%)");
      learningFactorLabel.setToolTipText("");
      getContentPane().add(learningFactorLabel);

      loadTrainingSlider.setMajorTickSpacing(1);
      loadTrainingSlider.setMinorTickSpacing(1);
      getContentPane().add(loadTrainingSlider);

      inertiaFactorLabel.setText("Factor de inercia (%)");
      getContentPane().add(inertiaFactorLabel);

      inertiaFactorSlider.setMajorTickSpacing(1);
      inertiaFactorSlider.setMinorTickSpacing(1);
      getContentPane().add(inertiaFactorSlider);

      spinnerOptionsPanel.setLayout(new java.awt.GridLayout(2, 3));

      minimumImprovementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mejora mínima"));
      minimumImprovementPanel.setLayout(new javax.swing.BoxLayout(minimumImprovementPanel, javax.swing.BoxLayout.Y_AXIS));

      minimumImprovementField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
      minimumImprovementField.setText("1e-6");
      minimumImprovementField.setToolTipText("");
      minimumImprovementPanel.add(minimumImprovementField);

      spinnerOptionsPanel.add(minimumImprovementPanel);

      hiddenLayersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Capas ocultas"));
      hiddenLayersPanel.setLayout(new javax.swing.BoxLayout(hiddenLayersPanel, javax.swing.BoxLayout.Y_AXIS));

      hiddenLayersSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
      hiddenLayersPanel.add(hiddenLayersSpinner);

      spinnerOptionsPanel.add(hiddenLayersPanel);

      hiddenNeuronsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Neuronas por capa oculta"));
      hiddenNeuronsPanel.setLayout(new javax.swing.BoxLayout(hiddenNeuronsPanel, javax.swing.BoxLayout.Y_AXIS));

      hiddenNeuronsSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
      hiddenNeuronsPanel.add(hiddenNeuronsSpinner);

      spinnerOptionsPanel.add(hiddenNeuronsPanel);

      maxiterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Iteraciones máximas"));
      maxiterPanel.setLayout(new javax.swing.BoxLayout(maxiterPanel, javax.swing.BoxLayout.Y_AXIS));

      maxiterSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1000), Integer.valueOf(10), null, Integer.valueOf(1)));
      maxiterPanel.add(maxiterSpinner);

      spinnerOptionsPanel.add(maxiterPanel);

      timesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Repeticiones"));
      timesPanel.setLayout(new javax.swing.BoxLayout(timesPanel, javax.swing.BoxLayout.Y_AXIS));

      timesSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 5, 500, 1));
      timesPanel.add(timesSpinner);

      spinnerOptionsPanel.add(timesPanel);

      generalInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Información"));
      generalInfoPanel.setLayout(new java.awt.GridLayout(2, 2, 2, 5));

      finalTrainErrorLabel.setFont(new java.awt.Font("Sans Serif", 1, 15)); // NOI18N
      finalTrainErrorLabel.setText("Error entrenamiento");
      generalInfoPanel.add(finalTrainErrorLabel);

      finalTrainError.setToolTipText("");
      generalInfoPanel.add(finalTrainError);

      finalTestErrorLabel.setFont(new java.awt.Font("Sans Serif", 1, 15)); // NOI18N
      finalTestErrorLabel.setText("Error en test");
      finalTestErrorLabel.setToolTipText("");
      generalInfoPanel.add(finalTestErrorLabel);

      finalTestError.setToolTipText("");
      generalInfoPanel.add(finalTestError);

      spinnerOptionsPanel.add(generalInfoPanel);

      getContentPane().add(spinnerOptionsPanel);

      outputArea.setEditable(false);
      outputArea.setColumns(20);
      outputArea.setLineWrap(true);
      outputArea.setRows(5);
      outputArea.setDoubleBuffered(true);
      outputArea.setDragEnabled(true);
      outputAreaPanel.setViewportView(outputArea);

      getContentPane().add(outputAreaPanel);

      actionPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

      trainButton.setText("Entrenar");
      trainButton.setToolTipText("");
      actionPanel.add(trainButton);

      getContentPane().add(actionPanel);

      statusPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

      statusLabel.setFont(new java.awt.Font("Sans Serif", 1, 15)); // NOI18N
      statusLabel.setForeground(new java.awt.Color(155, 2, 40));
      statusLabel.setText("Status: ");
      statusPanel.add(statusLabel);

      infoLabel.setForeground(new java.awt.Color(155, 2, 40));
      infoLabel.setText("No se han cargado los datos aún");
      statusPanel.add(infoLabel);

      getContentPane().add(statusPanel);

      progressPanel.setLayout(new javax.swing.BoxLayout(progressPanel, javax.swing.BoxLayout.LINE_AXIS));

      progressBar.setToolTipText("");
      progressBar.setAlignmentX(0.0F);
      progressPanel.add(progressBar);

      getContentPane().add(progressPanel);

      pack();
   }// </editor-fold>//GEN-END:initComponents

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
        //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new MainWindow().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel actionPanel;
   private javax.swing.JLabel finalTestError;
   private javax.swing.JLabel finalTestErrorLabel;
   private javax.swing.JLabel finalTrainError;
   private javax.swing.JLabel finalTrainErrorLabel;
   private javax.swing.JPanel generalInfoPanel;
   private javax.swing.Box.Filler glue;
   private javax.swing.JPanel hiddenLayersPanel;
   private javax.swing.JSpinner hiddenLayersSpinner;
   private javax.swing.JPanel hiddenNeuronsPanel;
   private javax.swing.JSpinner hiddenNeuronsSpinner;
   private javax.swing.JLabel inertiaFactorLabel;
   private javax.swing.JSlider inertiaFactorSlider;
   private javax.swing.JLabel infoLabel;
   private javax.swing.JLabel learningFactorLabel;
   private javax.swing.JButton loadTestDataButton;
   private javax.swing.JToolBar loadToolBar;
   private javax.swing.JButton loadTrainDataButton;
   private javax.swing.JSlider loadTrainingSlider;
   private javax.swing.JPanel maxiterPanel;
   private javax.swing.JSpinner maxiterSpinner;
   private javax.swing.JTextField minimumImprovementField;
   private javax.swing.JPanel minimumImprovementPanel;
   private javax.swing.JTextArea outputArea;
   private javax.swing.JScrollPane outputAreaPanel;
   private javax.swing.JProgressBar progressBar;
   private javax.swing.JPanel progressPanel;
   private javax.swing.JPanel spinnerOptionsPanel;
   private javax.swing.JLabel statusLabel;
   private javax.swing.JPanel statusPanel;
   private javax.swing.JPanel timesPanel;
   private javax.swing.JSpinner timesSpinner;
   private javax.swing.JButton trainButton;
   private javax.swing.JCheckBox useBiasCheckBox;
   // End of variables declaration//GEN-END:variables
}
